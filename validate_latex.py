import re

def contains_unicode_math(text):
    """Return True if any unsafe Unicode math characters are found."""
    bad_chars = ['√', '∫', '−', '²', '³']
    return any(char in text for char in bad_chars)

def super_fix_latex(text):
    r"""
    Clean and repair the LaTeX questions generated by the LLM.
    """

    # Merge broken lines inside \item
    lines = []
    buffer = ""

    for line in text.splitlines():
        if line.strip().startswith(r"\item"):
            if buffer:
                lines.append(buffer.strip())
            buffer = line.strip()
        else:
            buffer += " " + line.strip()

    if buffer:
        lines.append(buffer.strip())

    fixed_text = "\n".join(lines)

    # Replace Unicode characters
    replacements = {
        '√': r'\sqrt{}',
        '∫': r'\int',
        '−': '-',  # Unicode minus
        '²': '^{2}',
        '³': '^{3}',
    }
    for bad_char, replacement in replacements.items():
        fixed_text = fixed_text.replace(bad_char, replacement)

    # Remove double spaces
    fixed_text = re.sub(r'\s+', ' ', fixed_text)

    return fixed_text

def clean_llm_output(text):
    """Additional basic cleaning if needed."""
    text = text.replace("\\(", "$").replace("\\)", "$")  # Use $...$ for inline math
    return text
